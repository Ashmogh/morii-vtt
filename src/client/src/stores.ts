import type { Socket } from 'socket.io-client';
import type { DefaultEventsMap } from 'socket.io/dist/typed-events';
import { Writable, writable } from 'svelte/store';
import type Campaign from './interfaces/Campaign';
import type User from './interfaces/User';
import type CharacterAny from './interfaces/CharacterAny';

export const accessToken = writable("");
export const user: Writable<User> = writable();
export const campaignNewActive: Writable<boolean> = writable(false);
export const campaignDetailActive: Writable<boolean> = writable(false);
export const selectedCampaign: Writable<Campaign> = writable();
export const selectedCharacter: Writable<CharacterAny> = writable(undefined);
export const selectedCharacterTab: Writable<number> = writable(0);
export const selectedGameTab: Writable<string> = writable('default');
export const socket: Writable<Socket<DefaultEventsMap, DefaultEventsMap>> = writable();
export const ownerSocketID: Writable<string> = writable("");
export const userIDPairs: Writable<Record<string, string>> = writable({});
export const messageMode: Writable<number> = writable(0);
export const modifyCharacter: Writable<(debug?: string) => Promise<void>> = writable();
export const sendSkillCheck: Writable<(modifier: number, skillName: string, charName?: string, entityID?: string, diceType?: string, customID?: string, customFormula?: string, flag?: string, diceAccent?: 'roll-over' | 'roll-under', target?: number) => Promise<void>> = writable();
export const formatModifier: Writable<(modifier: number, signDisplay?: ("exceptZero" | "always" | "auto" | "never")) => string> = writable();
export const createNewAttack: Writable<(customName?: string, itemID?: string ) => string> = writable();
export const addNewResource: Writable<(customName?: string, customAmount?: string, itemID?: string) => string> = writable();